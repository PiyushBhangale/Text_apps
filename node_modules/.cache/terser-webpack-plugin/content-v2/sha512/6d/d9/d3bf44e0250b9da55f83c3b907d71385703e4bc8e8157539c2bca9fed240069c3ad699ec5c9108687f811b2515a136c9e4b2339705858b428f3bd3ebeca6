{"map":"{\"version\":3,\"sources\":[\"/home/piyush/Desktop/Python_Folder/SpellChecker/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/home/piyush/Desktop/Python_Folder/SpellChecker/src/logo.svg\",\"/home/piyush/Desktop/Python_Folder/SpellChecker/src/App.js\",\"/home/piyush/Desktop/Python_Folder/SpellChecker/src/serviceWorker.js\",\"/home/piyush/Desktop/Python_Folder/SpellChecker/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleChange\",\"event\",\"setState\",\"value\",\"target\",\"handleSubmit\",\"alert\",\"console\",\"log\",\"state\",\"preventDefault\",\"$\",\"ajax\",\"type\",\"headers\",\"X-CSRFToken\",\"window\",\"CSRF_TOKEN\",\"url\",\"data\",\"success\",\"spellings\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"className\",\"Form\",\"onSubmit\",\"Label\",\"Icon\",\"name\",\"TextArea\",\"placeholder\",\"onChange\",\"Button\",\"map\",\"x\",\"index\",\"length\",\"Component\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0QCqFzBC,cA7Eb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAcRQ,aAAa,SAACC,GAEZR,EAAKS,SAAS,CAACC,MAAOF,EAAMG,OAAOD,SAjBlBV,EAmBnBY,aAAa,SAACJ,GACZK,MAAM,0BACNC,QAAQC,IAAIf,EAAKgB,MAAMN,MAAM,UAC7BF,EAAMS,iBACNC,EAAAA,EAAEC,KAAK,CACLC,KAAM,OACNC,QAAS,CACPC,cAAeC,OAAOC,YAExBC,IAAI,gBACJC,KAAK,CACHA,KAAK1B,EAAKgB,MAAMN,OAGlBiB,QAAQ,SAACD,GACP1B,EAAKS,SAAS,CACZmB,UAAUF,IAEZZ,QAAQC,IAAIW,EAAK,mBAnCvB1B,EAAKgB,MAAM,CACTN,MAAM,GACNkB,UAAU,IAJO5B,qHA6CV,IAAA6B,EAAA1B,KAGP,OACE2B,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,cAClBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,SAAUhC,KAAKS,cACjBkB,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,KAAK,SADb,OAGAR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUC,YAAY,eAAepB,KAAK,OAAOV,MAAOP,KAAKa,MAAMN,MAAO+B,SAAUtC,KAAKI,eACzFuB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQtB,KAAK,UAAb,WASJU,EAAAC,EAAAC,cAAA,OAAA,KACC7B,KAAKa,MAAMY,UAAUe,IAAI,SAACC,EAAGC,GAAJ,OAE1Bf,EAAAC,EAAAC,cAAA,IAAA,KAAIY,EAAGC,IAAUhB,EAAKb,MAAMY,UAAUkB,OAAO,EAAIhB,EAAAC,EAAAC,cAAA,IAAA,KAAA,KAASF,EAAAC,EAAAC,cAAA,IAAA,KAAA,kBArEhDe,EAAAA,WCKEC,QACW,cAA7BzB,OAAO0B,SAASC,UAEe,UAA7B3B,OAAO0B,SAASC,UAEhB3B,OAAO0B,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport $ from 'jquery';\\nimport { Form, TextArea ,Button,Icon,Label} from 'semantic-ui-react'\\n\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n  this.state={\\n    value:\\\"\\\",\\n    spellings:[]\\n\\n  }}\\n  componentDidMount(){\\n\\n\\n\\n\\n\\n\\n  }  \\n  handleChange=(event)=> {\\n   \\n    this.setState({value: event.target.value});\\n  }\\n  handleSubmit=(event) =>{\\n    alert('A name was submitted: ');\\n    console.log(this.state.value,\\\"valuee\\\")\\n    event.preventDefault();\\n    $.ajax({\\n      type: 'POST',\\n      headers: {\\n        'X-CSRFToken': window.CSRF_TOKEN \\n    },\\n      url:'/api/getInput',\\n      data:{\\n        data:this.state.value,\\n\\n      },\\n      success:(data)=>{\\n        this.setState({\\n          spellings:data\\n        })\\n        console.log(data,\\\"SPELLINGSSS\\\")\\n    }\\n      \\n        \\n      })\\n   \\n      }  \\n  \\n  render() {\\n  \\n    \\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n        <Form onSubmit={this.handleSubmit}>\\n            <Label>\\n              <Icon name='mail' /> 23\\n            </Label>\\n            <TextArea placeholder='Tell us more' type=\\\"text\\\" value={this.state.value} onChange={this.handleChange}  />\\n            <Button type='submit'>Submit</Button>\\n        </Form>\\n        {/* <form onSubmit={this.handleSubmit}>\\n            <label>\\n              Text:\\n              <textarea type=\\\"text\\\" value={this.state.value} onChange={this.handleChange} />\\n            </label>\\n            <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\n        </form> */}\\n        <span>\\n        {this.state.spellings.map((x, index) => (\\n          \\n        <a>{x}{index === this.state.spellings.length-1 ? <a>.</a>:<a>,</a>}</a>\\n    ))}</span>\\n       \\n                  </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{164:function(e,t,a){e.exports=a(298)},169:function(e,t,a){},171:function(e,t,a){e.exports=a.p+\"static/media/logo.5d5d9eef.svg\"},172:function(e,t,a){},298:function(e,t,a){\"use strict\";a.r(t);var n=a(2),l=a.n(n),o=a(38),s=a.n(o),i=(a(169),a(132)),c=a(133),r=a(152),u=a(134),m=a(153),d=(a(171),a(172),a(135)),h=a.n(d),p=a(308),v=a(126),g=a(127),f=a(307),w=a(309),E=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(r.a)(this,Object(u.a)(t).call(this,e))).handleChange=function(e){a.setState({value:e.target.value})},a.handleSubmit=function(e){alert(\"A name was submitted: \"),console.log(a.state.value,\"valuee\"),e.preventDefault(),h.a.ajax({type:\"POST\",headers:{\"X-CSRFToken\":window.CSRF_TOKEN},url:\"/api/getInput\",data:{data:a.state.value},success:function(e){a.setState({spellings:e}),console.log(e,\"SPELLINGSSS\")}})},a.state={value:\"\",spellings:[]},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",{className:\"App\"},l.a.createElement(\"header\",{className:\"App-header\"},l.a.createElement(p.a,{onSubmit:this.handleSubmit},l.a.createElement(v.a,null,l.a.createElement(g.a,{name:\"mail\"}),\" 23\"),l.a.createElement(f.a,{placeholder:\"Tell us more\",type:\"text\",value:this.state.value,onChange:this.handleChange}),l.a.createElement(w.a,{type:\"submit\"},\"Submit\")),l.a.createElement(\"span\",null,this.state.spellings.map(function(t,a){return l.a.createElement(\"a\",null,t,a===e.state.spellings.length-1?l.a.createElement(\"a\",null,\".\"):l.a.createElement(\"a\",null,\",\"))}))))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(l.a.createElement(E,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[164,2,1]]]);","extractedComments":[]}